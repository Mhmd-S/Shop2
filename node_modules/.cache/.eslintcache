[{"C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\BrowserRouter.js":"3","C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Shop.js":"4","C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Home.js":"5","C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Cart.js":"6","C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Product.js":"7"},{"size":298,"mtime":1668244195376,"results":"8","hashOfConfig":"9"},{"size":3031,"mtime":1668672488952,"results":"10","hashOfConfig":"9"},{"size":0,"mtime":1668244260539,"results":"11","hashOfConfig":"9"},{"size":426,"mtime":1668342710595,"results":"12","hashOfConfig":"9"},{"size":473,"mtime":1668588522053,"results":"13","hashOfConfig":"9"},{"size":2186,"mtime":1668603721137,"results":"14","hashOfConfig":"9"},{"size":1739,"mtime":1668505041872,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dglja6",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\index.js",[],[],"C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\App.js",["39","40","41","42","43","44"],[],"import React, {useState} from 'react';\nimport './Styles/App.css';\nimport {Routes, Route, Link} from 'react-router-dom';\nimport Home from './Components/Home.js';\nimport Shop from './Components/Shop.js';\nimport Cart from './Components/Cart.js';\n\nfunction App() {\n\n  // Array housing objects with data related to the item added and quantity\n  const [ cart, setCart ] = useState([]);\n\n  const addToCart = (sockData, amount) => {\n\n    if (amount == 0) {\n      return;\n    } \n\n    let cartCopy = cart.slice();\n    \n    if (cartCopy.length === 0) { // If the cart is empty, just pus the item to the cart.\n      sockData.quantity= amount;\n      cartCopy.push(sockData);\n      setCart(cartCopy);\n      return; // Exit function so we dont go to the loop and waste resources.\n    }\n\n    for (let i = 0; i < cartCopy.length; i++) {\n      \n      if (cartCopy[i].name == sockData.name) { // If the item is in the cart already just add 1 to the quantity.\n        if (cartCopy[i].quantity > 98) { // If the current item quantity is > 98 just exit the function\n          return;\n        }\n        cartCopy[i].quantity = cartCopy[i].quantity + amount;  \n        break;\n      } else if (i == cartCopy.length - 1) { // loop reaches the end and the first if statement wasnt called then it means the item isnt in the cart, so we just push it.\n        sockData.quantity = amount;\n        cartCopy.push(sockData);\n        break;\n      }\n\n    }\n\n    setCart(cartCopy);\n  }\n\n  const removeFromCart = (sockData, mode) => {\n    let cartCopy = cart.slice();\n    for (let i = 0; i < cartCopy.length ; i++){\n      if (cartCopy[i].name == sockData.name) {\n        sockData.quantity == 1  || mode == 'all' ? cartCopy.splice(i, 1) : cartCopy[i].quantity = cartCopy[i].quantity - 1;\n      }\n    }\n    setCart(cartCopy)\n  }\n\n    let itemAmount = 0;\n    let cartPrice = 0;\n\n    if (cart[0]) {\n      for (let i = 0; i < cart.length; i++) {\n        let quantity = cart[i].quantity;\n        let totalPrice = cart[i].quantity * cart[i].price;\n        itemAmount += quantity;\n        cartPrice += totalPrice;\n  \n        // TODO test this function\n      } \n    }\n\n  return (\n  <div className=\"App-Container\">\n    <header className=\"App-Header\">\n      <div className=\"App-Header-Logo\">\n        <Link to=\"/\"><img src=\"/logo1.png\" alt=\"Aterbute Logo\" /></Link>\n      </div>\n      <div className=\"App-Header-List\">\n        <Link className=\"App-Header-Link\" to=\"/Shop\">Shop</Link>\n        <Link className=\"App-Header-Link\" to=\"/Cart\"><div className=\"App-Header-Cart-Info\"><span>Cart</span><span className='Cart-Info-Span'>{itemAmount}</span><span className='Cart-Info-Span'>{cartPrice.toFixed(2)}</span></div></Link>\n      </div>\n    </header>\n    <Routes>\n      <Route path=\"/\" element={<Home />}/>\n      <Route path=\"/shop\" element={<Shop addToCart={addToCart} />}/>\n      <Route path=\"/cart\" element={<Cart addToCart={addToCart} removeFromCart={removeFromCart} cart={cart} totalPrice={cartPrice} totalItems={itemAmount}/>}/>\n    </Routes>\n  </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\BrowserRouter.js",[],[],"C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Shop.js",[],[],"C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Home.js",[],[],"C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Cart.js",[],[],"C:\\Users\\user\\Desktop\\Mohamad Folder\\tutHtml\\task-app\\src\\Components\\Product.js",["45"],[],"import React, {useState} from 'react';\r\nimport '../Styles/Product.css'\r\n\r\nconst Product = (props) => {\r\n    const [inputAmount, setInputAmount] = useState(1);\r\n    const [validInput, setValidInput] = useState(true);\r\n\r\n    const handleInput = (e) => {\r\n        let input = e.target.value;\r\n\r\n        if (input == '') {\r\n            setInputAmount(0);\r\n            return;\r\n        }\r\n\r\n        input = input.replace(/[\\D]/,0);\r\n        setInputAmount(parseInt(input));\r\n    }\r\n\r\n    const handleTuning = (amount) => {\r\n        if ((inputAmount === 1 && amount === -1) || inputAmount > 98) {\r\n            return;\r\n        }\r\n        setInputAmount(inputAmount + amount)\r\n    }\r\n\r\n    const checkInput = () =>{\r\n        if (inputAmount === 0) {\r\n            setValidInput(false);\r\n        } else {\r\n            setValidInput(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"Product-Container\">\r\n            <img src={props.sockinfo.img} alt=\"Socks\"></img>\r\n            <div className='Product-Name-Container'>{props.sockinfo.name}</div>\r\n            <div className='Product-Price-Container'>{props.sockinfo.price}</div>\r\n            <div className=\"Product-Input-Container\">\r\n                <input className={validInput ? 'Product-Input' : 'Product-Input Product-Input-Invalid'} onChange={(e)=>{handleInput(e)}} type=\"text\" maxLength={2} value={inputAmount}></input>\r\n                <button onClick={()=>{handleTuning(-1)}}>-</button>\r\n                <button onClick={()=>handleTuning(1)}>+</button>\r\n            </div>\r\n            <button className=\"Product-Add-Button\" onClick={()=>{props.addToCart(props.sockinfo, inputAmount); checkInput()}}>Add To Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Product;",{"ruleId":"46","severity":1,"message":"47","line":15,"column":16,"nodeType":"48","messageId":"49","endLine":15,"endColumn":18},{"ruleId":"46","severity":1,"message":"47","line":30,"column":28,"nodeType":"48","messageId":"49","endLine":30,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":36,"column":20,"nodeType":"48","messageId":"49","endLine":36,"endColumn":22},{"ruleId":"46","severity":1,"message":"47","line":50,"column":28,"nodeType":"48","messageId":"49","endLine":50,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":51,"column":27,"nodeType":"48","messageId":"49","endLine":51,"endColumn":29},{"ruleId":"46","severity":1,"message":"47","line":51,"column":41,"nodeType":"48","messageId":"49","endLine":51,"endColumn":43},{"ruleId":"46","severity":1,"message":"47","line":11,"column":19,"nodeType":"48","messageId":"49","endLine":11,"endColumn":21},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]